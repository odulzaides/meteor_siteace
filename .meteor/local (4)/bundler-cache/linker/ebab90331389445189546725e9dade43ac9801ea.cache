[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nmoment = Package['mrt:moment'].moment;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAccountsClient = Package['accounts-base'].AccountsClient;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw(\"<!-- navbar  - you will be putting the login functions here -->\\n\"), HTML.NAV({\n    \"class\": \"navbar navbar-default\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"container-fluid\"\n  }, \"\\n        \", HTML.Raw('<div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">\\n                Site Ace\\n            </a>\\n\\n        </div>'), \"\\n        \", HTML.DIV({\n    \"class\": \"login\"\n  }, HTML.Raw(\"<br>\"), \"\\n            \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n\\n        \"), \"\\n    \"), \"\\n\"), \"\\n\\n\", HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n    \", HTML.H1(\"Welcome to the Website Share \", Blaze.View(\"lookup:username\", function() {\n    return Spacebars.mustache(view.lookup(\"username\"));\n  }), \" !\"), \"\\n    \", Spacebars.include(view.lookupTemplate(\"website_form\")), \"\\n    \", Spacebars.include(view.lookupTemplate(\"website_list\")), \"\\n\") ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"website_form\");\nTemplate[\"website_form\"] = new Template(\"Template.website_form\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ HTML.Comment(\" Only displays the 'add button' if someone is logged in.\"), \"\\n        \", HTML.A({\n      \"class\": \"btn btn-default js-toggle-website-form\",\n      href: \"#\"\n    }, \"\\n            \", HTML.SPAN({\n      \"class\": \"glyphicon glyphicon-plus\",\n      \"aria-hidden\": \"true\"\n    }), \"\\n        \"), \"\\n    \" ];\n  }), HTML.Raw('\\n    <div id=\"website_form\" class=\"hidden_div\">\\n        <form class=\"js-save-website-form\">\\n            <div class=\"form-group\">\\n                <label for=\"url\">Site address</label>\\n                <input type=\"text\" class=\"form-control\" id=\"url\" placeholder=\"http://www.mysite.com\">\\n            </div>\\n            <div class=\"form-group\">\\n                <label for=\"title\">Title</label>\\n                <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Mysite\">\\n            </div>\\n            <div class=\"form-group\">\\n                <label for=\"description\">Description</label>\\n                <input type=\"text\" class=\"form-control\" id=\"description\" placeholder=\"I found this site really useful for ...\">\\n            </div>\\n\\n            <button type=\"submit\" class=\"btn btn-default\">Submit</button>\\n        </form>\\n    </div>') ];\n}));\n\nTemplate.__checkName(\"website_list\");\nTemplate[\"website_list\"] = new Template(\"Template.website_list\", (function() {\n  var view = this;\n  return HTML.OL(\"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"websites\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"website_item\")), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"website_item\");\nTemplate[\"website_item\"] = new Template(\"Template.website_item\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"url\"));\n    }\n  }, Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  })), \"\\n\\n        \", HTML.P(\"\\n            \", Blaze.View(\"lookup:description\", function() {\n    return Spacebars.mustache(view.lookup(\"description\"));\n  }), \"\\n        \"), \"\\n        \", HTML.P(\"\\n            Added by: \", HTML.SPAN({\n    style: \"color:rgb(72, 159, 218)\"\n  }, Blaze.View(\"lookup:getUser\", function() {\n    return Spacebars.mustache(view.lookup(\"getUser\"), view.lookup(\"createdBy\"));\n  })), \"  on: \", HTML.SPAN({\n    style: \"color:rgb(72, 159, 218)\"\n  }, Blaze.View(\"lookup:setDate\", function() {\n    return Spacebars.mustache(view.lookup(\"setDate\"));\n  })), \" at \", HTML.SPAN({\n    style: \"color:rgb(72, 159, 218)\"\n  }, Blaze.View(\"lookup:setTime\", function() {\n    return Spacebars.mustache(view.lookup(\"setTime\"));\n  })), \"\\n            \", HTML.Raw(\"<!--// ADD THE NUMBER OF UP VOTES AND DOWN VOTES -->\"), \"\\n        \"), HTML.Raw('\\n\\n\\n        <!--<a href=\"#\" class=\"btn btn-default js-upvote\">-->\\n            <!--<span class=\"glyphicon glyphicon-arrow-up\" aria-hidden=\"true\"></span>-->\\n        <!--</a>-->\\n        <!--<a href=\"#\" class=\"btn btn-default js-downvote\">-->\\n            <!--<span class=\"glyphicon glyphicon-arrow-down\" aria-hidden=\"true\"></span>-->\\n        <!--</a>-->\\n        <!-- you will be putting your up and down vote buttons in here! -->\\n        <a href=\"#\" class=\"btn btn-default js-upvote\">\\n            <span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\\n        </a>\\n        <a href=\"#\" class=\"btn btn-default js-downvote\">\\n            <span class=\"glyphicon glyphicon-minus\" aria-hidden=\"true\"></span>\\n        </a>\\n    '));\n}));\n\n}).call(this);\n","servePath":"/template.siteace.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/template.siteace.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/template.siteace.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw(\"<!-- navbar  - you will be putting the login functions here -->\\n\"), HTML.NAV({\n    \"class\": \"navbar navbar-default\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"container-fluid\"\n  }, \"\\n        \", HTML.Raw('<div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">\\n                Site Ace\\n            </a>\\n\\n        </div>'), \"\\n        \", HTML.DIV({\n    \"class\": \"login\"\n  }, HTML.Raw(\"<br>\"), \"\\n            \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n\\n        \"), \"\\n    \"), \"\\n\"), \"\\n\\n\", HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n    \", HTML.H1(\"Welcome to the Website Share \", Blaze.View(\"lookup:username\", function() {\n    return Spacebars.mustache(view.lookup(\"username\"));\n  }), \" !\"), \"\\n    \", Spacebars.include(view.lookupTemplate(\"website_form\")), \"\\n    \", Spacebars.include(view.lookupTemplate(\"website_list\")), \"\\n\") ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"website_form\");\nTemplate[\"website_form\"] = new Template(\"Template.website_form\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ HTML.Comment(\" Only displays the 'add button' if someone is logged in.\"), \"\\n        \", HTML.A({\n      \"class\": \"btn btn-default js-toggle-website-form\",\n      href: \"#\"\n    }, \"\\n            \", HTML.SPAN({\n      \"class\": \"glyphicon glyphicon-plus\",\n      \"aria-hidden\": \"true\"\n    }), \"\\n        \"), \"\\n    \" ];\n  }), HTML.Raw('\\n    <div id=\"website_form\" class=\"hidden_div\">\\n        <form class=\"js-save-website-form\">\\n            <div class=\"form-group\">\\n                <label for=\"url\">Site address</label>\\n                <input type=\"text\" class=\"form-control\" id=\"url\" placeholder=\"http://www.mysite.com\">\\n            </div>\\n            <div class=\"form-group\">\\n                <label for=\"title\">Title</label>\\n                <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Mysite\">\\n            </div>\\n            <div class=\"form-group\">\\n                <label for=\"description\">Description</label>\\n                <input type=\"text\" class=\"form-control\" id=\"description\" placeholder=\"I found this site really useful for ...\">\\n            </div>\\n\\n            <button type=\"submit\" class=\"btn btn-default\">Submit</button>\\n        </form>\\n    </div>') ];\n}));\n\nTemplate.__checkName(\"website_list\");\nTemplate[\"website_list\"] = new Template(\"Template.website_list\", (function() {\n  var view = this;\n  return HTML.OL(\"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"websites\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"website_item\")), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"website_item\");\nTemplate[\"website_item\"] = new Template(\"Template.website_item\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"url\"));\n    }\n  }, Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  })), \"\\n\\n        \", HTML.P(\"\\n            \", Blaze.View(\"lookup:description\", function() {\n    return Spacebars.mustache(view.lookup(\"description\"));\n  }), \"\\n        \"), \"\\n        \", HTML.P(\"\\n            Added by: \", HTML.SPAN({\n    style: \"color:rgb(72, 159, 218)\"\n  }, Blaze.View(\"lookup:getUser\", function() {\n    return Spacebars.mustache(view.lookup(\"getUser\"), view.lookup(\"createdBy\"));\n  })), \"  on: \", HTML.SPAN({\n    style: \"color:rgb(72, 159, 218)\"\n  }, Blaze.View(\"lookup:setDate\", function() {\n    return Spacebars.mustache(view.lookup(\"setDate\"));\n  })), \" at \", HTML.SPAN({\n    style: \"color:rgb(72, 159, 218)\"\n  }, Blaze.View(\"lookup:setTime\", function() {\n    return Spacebars.mustache(view.lookup(\"setTime\"));\n  })), \"\\n            \", HTML.Raw(\"<!--// ADD THE NUMBER OF UP VOTES AND DOWN VOTES -->\"), \"\\n        \"), HTML.Raw('\\n\\n\\n        <!--<a href=\"#\" class=\"btn btn-default js-upvote\">-->\\n            <!--<span class=\"glyphicon glyphicon-arrow-up\" aria-hidden=\"true\"></span>-->\\n        <!--</a>-->\\n        <!--<a href=\"#\" class=\"btn btn-default js-downvote\">-->\\n            <!--<span class=\"glyphicon glyphicon-arrow-down\" aria-hidden=\"true\"></span>-->\\n        <!--</a>-->\\n        <!-- you will be putting your up and down vote buttons in here! -->\\n        <a href=\"#\" class=\"btn btn-default js-upvote\">\\n            <span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\\n        </a>\\n        <a href=\"#\" class=\"btn btn-default js-downvote\">\\n            <span class=\"glyphicon glyphicon-minus\" aria-hidden=\"true\"></span>\\n        </a>\\n    '));\n}));\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// siteace.js                                                          //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nWebsites = new Mongo.Collection(\"websites\");                           // 1\n                                                                       //\nif (Meteor.isClient) {                                                 // 3\n                                                                       //\n    Session.set(\"websiteLimit\", 8);                                    // 5\n                                                                       //\n    lastScrollTop = 0;                                                 // 8\n    $(window).scroll(function (event) {                                // 9\n        console.log(Date());                                           // 10\n        // test if we are near the bottom of the window                //\n        if ($(window).scrollTop() + $(window).height() > $(document).height() - 100) {\n            // where are we in the page?                               //\n            var scrollTop = $(this).scrollTop();                       // 14\n            // test if we are going down                               //\n            if (scrollTop > lastScrollTop) {                           // 16\n                // yes we are heading down...                          //\n                Session.set(\"websiteLimit\", Session.get(\"websiteLimit\") + 4);\n            }                                                          //\n                                                                       //\n            lastScrollTop = scrollTop;                                 // 21\n        }                                                              //\n    });                                                                //\n                                                                       //\n    Accounts.ui.config({                                               // 26\n        passwordSignupFields: \"USERNAME_AND_EMAIL\"                     // 27\n    });                                                                //\n                                                                       //\n    /////                                                              //\n    // template helpers                                                //\n    /////                                                              //\n                                                                       //\n    // helper function that returns all available websites             //\n    Template.website_list.helpers({                                    // 37\n        websites: function () {                                        // 38\n            return Websites.find({});                                  // 39\n        }                                                              //\n                                                                       //\n    });                                                                //\n                                                                       //\n    Template.body.helpers({                                            // 44\n        username: function () {                                        // 45\n            if (Meteor.user()) {                                       // 46\n                return Meteor.user().username;                         // 47\n                //return Meteor.user().emails[0].address;              //\n            } else {                                                   //\n                    return \"anonymous internet user\";                  // 52\n                }                                                      //\n        }                                                              //\n    });                                                                //\n    Template.website_item.helpers({                                    // 56\n        getUser: function (user_id) {                                  // 57\n            var user = Meteor.users.findOne({ _id: user_id });         // 58\n            console.log(user);                                         // 59\n            if (user) {                                                // 60\n                return user.username;                                  // 61\n            } else {                                                   //\n                return \"Anonymous internet user\";                      // 63\n            }                                                          //\n        },                                                             //\n        setDate: function (createdOn) {                                // 66\n            var date = new Date();                                     // 67\n            var createDate = moment(date).format(\"MM/DD/YY\");          // 68\n            return createDate;                                         // 69\n        },                                                             //\n        setTime: function (createdOn) {                                // 71\n            var createTime = moment(date).format(\"h:hh A\");            // 72\n            return createTime;                                         // 73\n        }                                                              //\n    });                                                                //\n                                                                       //\n    /////                                                              //\n    // template events                                                 //\n    /////                                                              //\n                                                                       //\n    Template.website_item.events({                                     // 83\n        \"click .js-upvote\": function (event) {                         // 84\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)             //\n            var website_id = this._id;                                 // 87\n            console.log(\"Up voting website with id \" + website_id);    // 88\n            //                                                         //\n            // TODO - put the code in here to add a vote to a website!\n                                                                       //\n            return false; // prevent the button from reloading the page\n        },                                                             //\n        \"click .js-downvote\": function (event) {                       // 94\n                                                                       //\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)             //\n            var website_id = this._id;                                 // 98\n            console.log(\"Down voting website with id \" + website_id);  // 99\n                                                                       //\n            // TODO - put the code in here to remove a vote from a website!\n                                                                       //\n            return false; // prevent the button from reloading the page\n        }                                                              //\n    });                                                                //\n                                                                       //\n    Template.website_form.events({                                     // 107\n        \"click .js-toggle-website-form\": function (event) {            // 108\n            $(\"#website_form\").toggle('slow');                         // 109\n        },                                                             //\n        \"submit .js-save-website-form\": function (event) {             // 111\n                                                                       //\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;                          // 114\n            var title = event.target.title.value;                      // 115\n            var description = event.target.description.value;          // 116\n            console.log(\"The url they entered is: \" + url);            // 117\n                                                                       //\n            //  TODO - put your website saving code in here!           //\n            if (Meteor.user()) {                                       // 120\n                var date = Date();                                     // 121\n                //date = date.toLocaleDateString()+ \" \" + date.toLocaleTimeString();\n                Websites.insert({                                      // 123\n                    url: url,                                          // 124\n                    title: title,                                      // 125\n                    description: description,                          // 126\n                    createdOn: date,                                   // 127\n                    createdBy: Meteor.user()._id                       // 128\n                });                                                    //\n                                                                       //\n                console.log(date);                                     // 131\n                $(\"#url\").val(\" \");                                    // 132\n                $(\"#title\").val(\" \");                                  // 133\n                $(\"#description\").val(\" \");                            // 134\n                $(\"#website_form\").toggle('slow');                     // 135\n                                                                       //\n                return false;                                          // 137\n            }                                                          //\n                                                                       //\n            return false; // stop the form submit from reloading the page\n        }                                                              //\n    });                                                                //\n}                                                                      //\nvar date = Date();                                                     // 146\n                                                                       //\nif (Meteor.isServer) {                                                 // 148\n    // start up function that creates entries in the Websites databases.\n    Meteor.startup(function () {                                       // 150\n        // code to run on server at startup                            //\n        if (!Websites.findOne()) {                                     // 152\n            console.log(\"No websites yet. Creating starter data.\");    // 153\n            Websites.insert({                                          // 154\n                title: \"Goldsmiths Computing Department\",              // 155\n                url: \"http://www.gold.ac.uk/computing/\",               // 156\n                description: \"This is where this course was developed.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\")      // 158\n            });                                                        //\n            Websites.insert({                                          // 160\n                title: \"University of London\",                         // 161\n                url: \"http://www.londoninternational.ac.uk/courses/undergraduate/goldsmiths/bsc-creative-computing-bsc-diploma-work-entry-route\",\n                description: \"University of London International Programme.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\")      // 164\n            });                                                        //\n            Websites.insert({                                          // 166\n                title: \"Coursera\",                                     // 167\n                url: \"http://www.coursera.org\",                        // 168\n                description: \"Universal access to the worldâ€™s best education.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\")      // 170\n            });                                                        //\n            Websites.insert({                                          // 172\n                title: \"Google\",                                       // 173\n                url: \"http://www.google.com\",                          // 174\n                description: \"Popular search engine.\",                 // 175\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\")      // 176\n            });                                                        //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/siteace.js","sourceMap":{"version":3,"sources":["/siteace.js"],"names":[],"mappings":"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","file":"/siteace.js","sourcesContent":["Websites = new Mongo.Collection(\"websites\");\n\nif (Meteor.isClient) {\n\n    Session.set(\"websiteLimit\", 8);\n\n\n    lastScrollTop = 0;\n    $(window).scroll(function (event) {\n        console.log(Date());\n        // test if we are near the bottom of the window\n        if ($(window).scrollTop() + $(window).height() > $(document).height() - 100) {\n            // where are we in the page?\n            var scrollTop = $(this).scrollTop();\n            // test if we are going down\n            if (scrollTop > lastScrollTop) {\n                // yes we are heading down...\n                Session.set(\"websiteLimit\", Session.get(\"websiteLimit\") + 4);\n            }\n\n            lastScrollTop = scrollTop;\n        }\n\n    })\n\n    Accounts.ui.config({\n        passwordSignupFields: \"USERNAME_AND_EMAIL\"\n    });\n\n\n    /////\n    // template helpers\n    /////\n\n\n    // helper function that returns all available websites\n    Template.website_list.helpers({\n        websites: function () {\n            return Websites.find({});\n        },\n\n    });\n\n    Template.body.helpers({\n        username: function () {\n            if (Meteor.user()) {\n                return Meteor.user().username;\n                //return Meteor.user().emails[0].address;\n\n            }\n            else {\n                return \"anonymous internet user\";\n            }\n        }\n    });\n    Template.website_item.helpers({\n        getUser:function(user_id){\n            var user = Meteor.users.findOne({_id:user_id});\n            console.log(user);\n            if(user){\n                return user.username;\n            } else {\n                return \"Anonymous internet user\"\n            }\n        },\n        setDate:function(createdOn){\n            var date = new Date();\n            var createDate = moment(date).format(\"MM/DD/YY\");\n            return createDate;\n        },\n        setTime:function(createdOn){\n            var createTime = moment(date).format(\"h:hh A\");\n            return createTime;\n        }\n    });\n\n\n\n    /////\n    // template events\n    /////\n\n    Template.website_item.events({\n        \"click .js-upvote\": function (event) {\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Up voting website with id \" + website_id);\n            //\n            // TODO - put the code in here to add a vote to a website!\n\n            return false;// prevent the button from reloading the page\n        },\n        \"click .js-downvote\": function (event) {\n\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Down voting website with id \" + website_id);\n\n            // TODO - put the code in here to remove a vote from a website!\n\n            return false;// prevent the button from reloading the page\n        }\n    })\n\n    Template.website_form.events({\n        \"click .js-toggle-website-form\": function (event) {\n            $(\"#website_form\").toggle('slow');\n        },\n        \"submit .js-save-website-form\": function (event) {\n\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;\n            var title = event.target.title.value;\n            var description = event.target.description.value;\n            console.log(\"The url they entered is: \" + url);\n\n            //  TODO - put your website saving code in here!\n            if (Meteor.user()){\n                var date = Date();\n                //date = date.toLocaleDateString()+ \" \" + date.toLocaleTimeString();\n                Websites.insert({\n                    url:url,\n                    title:title,\n                    description:description,\n                    createdOn:date,\n                    createdBy:Meteor.user()._id\n                });\n\n                console.log(date);\n                $(\"#url\").val(\" \");\n                $(\"#title\").val(\" \");\n                $(\"#description\").val(\" \");\n                $(\"#website_form\").toggle('slow');\n\n                return false;\n\n            }\n\n            return false;// stop the form submit from reloading the page\n\n        }\n    });\n}\nvar date = Date();\n\nif (Meteor.isServer) {\n    // start up function that creates entries in the Websites databases.\n    Meteor.startup(function () {\n        // code to run on server at startup\n        if (!Websites.findOne()) {\n            console.log(\"No websites yet. Creating starter data.\");\n            Websites.insert({\n                title: \"Goldsmiths Computing Department\",\n                url: \"http://www.gold.ac.uk/computing/\",\n                description: \"This is where this course was developed.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\")\n            });\n            Websites.insert({\n                title: \"University of London\",\n                url: \"http://www.londoninternational.ac.uk/courses/undergraduate/goldsmiths/bsc-creative-computing-bsc-diploma-work-entry-route\",\n                description: \"University of London International Programme.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\")\n            });\n            Websites.insert({\n                title: \"Coursera\",\n                url: \"http://www.coursera.org\",\n                description: \"Universal access to the worldâ€™s best education.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\")\n            });\n            Websites.insert({\n                title: \"Google\",\n                url: \"http://www.google.com\",\n                description: \"Popular search engine.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\")\n            });\n        }\n    });\n}\n"]}}]