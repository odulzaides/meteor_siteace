{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Websites = new Mongo.Collection(\"websites\");\n\nif (Meteor.isClient) {\n\n    Session.set(\"websiteLimit\", 8);\n\n    lastScrollTop = 0;\n    $(window).scroll(function (event) {\n\n        // test if we are near the bottom of the window\n        if ($(window).scrollTop() + $(window).height() > $(document).height() - 100) {\n            // where are we in the page?\n            var scrollTop = $(this).scrollTop();\n            // test if we are going down\n            if (scrollTop > lastScrollTop) {\n                // yes we are heading down...\n                console.log(\"We are heading down\");\n                Session.set(\"websiteLimit\", Session.get(\"websiteLimit\") + 4);\n            }\n\n            lastScrollTop = scrollTop;\n        }\n    });\n\n    Accounts.ui.config({\n        passwordSignupFields: \"USERNAME_AND_EMAIL\"\n    });\n\n    /////\n    // template helpers\n    /////\n\n    // helper function that returns all available websites\n    Template.website_list.helpers({\n        websites: function () {\n            return Websites.find({});\n        }\n\n    });\n\n    Template.body.helpers({\n        username: function () {\n            if (Meteor.user()) {\n                return Meteor.user().username;\n                //return Meteor.user().emails[0].address;\n            } else {\n                    return \"anonymous internet user\";\n                }\n        }\n    });\n    Template.website_item.helpers({\n        getUser: function (user_id) {\n            var user = Meteor.users.findOne({ _id: user_id });\n            console.log(user);\n            if (user) {\n                return user.username;\n            } else {\n                return \"Anonymous internet user\";\n            }\n        },\n        getDate: function () {\n            //createdOn\n            var date = createdOn; //new Date();\n            var createDate = moment(date).format(\"MM/DD/YY\");\n            return createDate;\n        },\n        getTime: function () {\n            //createdOn\n            var date = createdOn;\n            var createTime = moment(date).format(\"h:hh A\");\n            return createTime;\n        },\n        getUpVote: function (upVote) {\n            var website_id = this._id;\n            Websites.findOne({ _id: website_id });\n        },\n        getDownVote: function () {}\n    });\n\n    /////\n    // template events\n    /////\n\n    Template.website_item.events({\n        \"click .js-upvote\": function (event) {\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Up voting website with id \" + website_id);\n            //\n            // TODO - put the code in here to add a vote to a website!\n            Websites.update({ _id: website_id }, { $inc: { upvote: +1 } }); // for a vote UP\n\n            return false; // prevent the button from reloading the page\n        },\n        \"click .js-downvote\": function (event) {\n\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Down voting website with id \" + website_id);\n\n            // TODO - put the code in here to remove a vote from a website!\n            Websites.update({ _id: website_id }, { $inc: { downvote: +1 } });\n\n            return false; // prevent the button from reloading the page\n        }\n    });\n\n    Template.website_form.events({\n        \"click .js-toggle-website-form\": function (event) {\n            $(\"#website_form\").toggle('slow');\n        },\n        \"submit .js-save-website-form\": function (event) {\n\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;\n            var title = event.target.title.value;\n            var description = event.target.description.value;\n            console.log(\"The url they entered is: \" + url);\n\n            //  TODO - put your website saving code in here!\n            if (Meteor.user()) {\n                var date = new Date();\n                Websites.insert({\n                    url: url,\n                    title: title,\n                    description: description,\n                    createdOn: date,\n                    createdBy: Meteor.user()._id,\n                    upVote: 0,\n                    downVote: 0\n                });\n\n                console.log(date);\n                $(\"#url\").val(\" \");\n                $(\"#title\").val(\" \");\n                $(\"#description\").val(\" \");\n                $(\"#website_form\").toggle('slow');\n\n                return false;\n            }\n\n            return false; // stop the form submit from reloading the page\n        }\n    });\n}\nvar date = Date();\n\nif (Meteor.isServer) {\n    // start up function that creates entries in the Websites databases.\n    Meteor.startup(function () {\n        // code to run on server at startup\n        if (!Websites.findOne()) {\n            console.log(\"No websites yet. Creating starter data.\");\n            Websites.insert({\n                title: \"Goldsmiths Computing Department\",\n                url: \"http://www.gold.ac.uk/computing/\",\n                description: \"This is where this course was developed.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\"),\n                upVote: 0,\n                downVote: 0\n            });\n            Websites.insert({\n                title: \"University of London\",\n                url: \"http://www.londoninternational.ac.uk/courses/undergraduate/goldsmiths/bsc-creative-computing-bsc-diploma-work-entry-route\",\n                description: \"University of London International Programme.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\"),\n                upVote: 0,\n                downVote: 0\n            });\n            Websites.insert({\n                title: \"Coursera\",\n                url: \"http://www.coursera.org\",\n                description: \"Universal access to the worldâ€™s best education.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\"),\n                upVote: 0,\n                downVote: 0\n            });\n            Websites.insert({\n                title: \"Google\",\n                url: \"http://www.google.com\",\n                description: \"Popular search engine.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\"),\n                upVote: 0,\n                downVote: 0\n            });\n        }\n    });\n}","ast":null,"map":{"version":3,"sources":["/siteace.js"],"names":[],"mappings":"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","file":"/siteace.js.map","sourcesContent":["Websites = new Mongo.Collection(\"websites\");\n\nif (Meteor.isClient) {\n\n    Session.set(\"websiteLimit\", 8);\n\n\n    lastScrollTop = 0;\n    $(window).scroll(function (event) {\n\n        // test if we are near the bottom of the window\n        if ($(window).scrollTop() + $(window).height() > $(document).height() - 100) {\n            // where are we in the page?\n            var scrollTop = $(this).scrollTop();\n            // test if we are going down\n            if (scrollTop > lastScrollTop) {\n                // yes we are heading down...\n                console.log(\"We are heading down\");\n                Session.set(\"websiteLimit\", Session.get(\"websiteLimit\") + 4);\n            }\n\n            lastScrollTop = scrollTop;\n        }\n\n    })\n\n    Accounts.ui.config({\n        passwordSignupFields: \"USERNAME_AND_EMAIL\"\n    });\n\n\n    /////\n    // template helpers\n    /////\n\n\n    // helper function that returns all available websites\n    Template.website_list.helpers({\n        websites: function () {\n            return Websites.find({});\n        },\n\n    });\n\n    Template.body.helpers({\n        username: function () {\n            if (Meteor.user()) {\n                return Meteor.user().username;\n                //return Meteor.user().emails[0].address;\n\n            }\n            else {\n                return \"anonymous internet user\";\n            }\n        }\n    });\n    Template.website_item.helpers({\n        getUser:function(user_id){\n            var user = Meteor.users.findOne({_id:user_id});\n            console.log(user);\n            if(user){\n                return user.username;\n            } else {\n                return \"Anonymous internet user\"\n            }\n        },\n        getDate:function(){//createdOn\n            var date = createdOn; //new Date();\n            var createDate = moment(date).format(\"MM/DD/YY\");\n            return createDate;\n        },\n        getTime:function(){//createdOn\n            var date = createdOn;\n            var createTime = moment(date).format(\"h:hh A\");\n            return createTime;\n        },\n        getUpVote:function(upVote){\n            var website_id = this._id;\n            Websites.findOne({_id:website_id})\n            \n        },\n        getDownVote:function(){\n\n        }\n    });\n\n\n\n    /////\n    // template events\n    /////\n\n    Template.website_item.events({\n        \"click .js-upvote\": function (event) {\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Up voting website with id \" + website_id);\n            //\n            // TODO - put the code in here to add a vote to a website!\n            Websites.update({_id: website_id},{$inc: {upvote: +1}}); // for a vote UP\n\n            return false;// prevent the button from reloading the page\n        },\n        \"click .js-downvote\": function (event) {\n\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Down voting website with id \" + website_id);\n\n            // TODO - put the code in here to remove a vote from a website!\n            Websites.update({_id: website_id},{$inc: {downvote: +1}});\n\n            return false;// prevent the button from reloading the page\n        }\n    })\n\n    Template.website_form.events({\n        \"click .js-toggle-website-form\": function (event) {\n            $(\"#website_form\").toggle('slow');\n        },\n        \"submit .js-save-website-form\": function (event) {\n\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;\n            var title = event.target.title.value;\n            var description = event.target.description.value;\n            console.log(\"The url they entered is: \" + url);\n\n            //  TODO - put your website saving code in here!\n            if (Meteor.user()){\n                var date = new Date();\n                Websites.insert({\n                    url:url,\n                    title:title,\n                    description:description,\n                    createdOn:date,\n                    createdBy:Meteor.user()._id,\n                    upVote:0,\n                    downVote:0\n                });\n\n                console.log(date);\n                $(\"#url\").val(\" \");\n                $(\"#title\").val(\" \");\n                $(\"#description\").val(\" \");\n                $(\"#website_form\").toggle('slow');\n\n                return false;\n\n            }\n\n            return false;// stop the form submit from reloading the page\n\n        }\n    });\n}\nvar date = Date();\n\nif (Meteor.isServer) {\n    // start up function that creates entries in the Websites databases.\n    Meteor.startup(function () {\n        // code to run on server at startup\n        if (!Websites.findOne()) {\n            console.log(\"No websites yet. Creating starter data.\");\n            Websites.insert({\n                title: \"Goldsmiths Computing Department\",\n                url: \"http://www.gold.ac.uk/computing/\",\n                description: \"This is where this course was developed.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\"),\n                upVote:0,\n                downVote:0\n            });\n            Websites.insert({\n                title: \"University of London\",\n                url: \"http://www.londoninternational.ac.uk/courses/undergraduate/goldsmiths/bsc-creative-computing-bsc-diploma-work-entry-route\",\n                description: \"University of London International Programme.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\"),\n                upVote:0,\n                downVote:0\n            });\n            Websites.insert({\n                title: \"Coursera\",\n                url: \"http://www.coursera.org\",\n                description: \"Universal access to the worldâ€™s best education.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\"),\n                upVote:0,\n                downVote:0\n            });\n            Websites.insert({\n                title: \"Google\",\n                url: \"http://www.google.com\",\n                description: \"Popular search engine.\",\n                createdOn: moment(date).format(\"MM/DD/YY h:hh A\"),\n                upVote:0,\n                downVote:0\n            });\n        }\n    });\n}\n"]},"hash":"ee1a9f9f70d9bd382f66ea3a1154af780ab03b12"}
